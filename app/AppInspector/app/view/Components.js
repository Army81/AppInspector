/*
 * File: app/view/Components.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('AI.view.Components', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.components',

    requires: [
        'Ext.tree.Panel',
        'Ext.toolbar.Toolbar',
        'Ext.tree.View',
        'Ext.tree.Column',
        'Ext.tab.Panel',
        'Ext.grid.property.Grid',
        'Ext.tab.Tab',
        'Ext.layout.container.Border'
    ],

    initialLoad: false,
    height: 250,
    itemId: 'ComponentInspector',
    width: 400,
    layout: 'border',
    iconCls: 'icn-components',
    title: 'Components',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'treepanel',
                    flex: 1,
                    region: 'center',
                    itemId: 'ComponentTree',
                    autoScroll: true,
                    store: 'Components',
                    rootVisible: false,
                    useArrows: true,
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            ui: 'default-toolbar',
                            items: [
                                {
                                    xtype: 'button',
                                    itemId: 'RefreshComponentTree',
                                    iconCls: 'icn-refresh',
                                    text: 'Refresh'
                                }
                            ]
                        }
                    ],
                    viewConfig: {

                    },
                    columns: [
                        {
                            xtype: 'treecolumn',
                            dataIndex: 'text',
                            text: 'Component ID',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'xtype',
                            text: 'XType'
                        }
                    ]
                },
                {
                    xtype: 'tabpanel',
                    flex: 1,
                    region: 'east',
                    split: true,
                    itemId: 'ComponentDetails',
                    minWidth: 200,
                    width: 150,
                    activeTab: 0,
                    items: [
                        {
                            xtype: 'propertygrid',
                            itemId: 'ComponentProps',
                            title: 'Properties',
                            source: {
                                
                            }
                        },
                        {
                            xtype: 'propertygrid',
                            itemId: 'ComponentMethods',
                            title: 'Methods',
                            source: {
                                
                            }
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});