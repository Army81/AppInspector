/*
 * File: app/controller/Events.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('AI.controller.Events', {
    extend: 'Ext.app.Controller',

    requires: [
        'AI.util.extjs.Events'
    ],

    init: function(application) {
        this.control({
            'button#RecordEvents' : {
                'click' : this.onRecordEventsClick
            },

            'button#StopRecording' : {
                'click' : this.onStopRecordingClick
            }
        });
    },

    onRecordEventsClick: function() {
        var me = this,
            store = Ext.getStore('Events');

        Ext.ComponentQuery.query('button#RecordEvents')[0].hide();
        Ext.ComponentQuery.query('button#StopRecording')[0].show();

        if (this.getApplication().info.framework === 'touch') {
            Ext.Msg.alert('Not Implemented', 'This feature is not implemented yet for Sencha Touch.');
            return;
        }

        var getEvents = function() {
            AI.util.InspectedWindow.eval(
                AI.util.extjs.Events.recordEvents,
                null,
                function (events) {
                    store.add(events.dom);

                    me.requestId = requestAnimationFrame(getEvents);
                }
            );
        };

        me.requestId = requestAnimationFrame(getEvents);
    },

    onStopRecordingClick: function() {
        var me = this;

        Ext.ComponentQuery.query('button#StopRecording')[0].hide();
        Ext.ComponentQuery.query('button#RecordEvents')[0].show();

        AI.util.InspectedWindow.eval(
            AI.util.extjs.Events.stopEvents,
            null,
            function () {
                cancelAnimationFrame(me.requestId);
            }
        );
    }

});
